package frontend_admin_question

import "quizzly/internal/quizzly/model"
import "quizzly/pkg/structs"
import "github.com/google/uuid"
import "fmt"
import "quizzly/web/frontend/templ/components"

var (
	answerOptionColors = [][]string{
		{
			"bg-orange-500",
			"bg-orange-600",
		},
		{
			"bg-green-500",
			"bg-green-600",
		},
		{
			"bg-rose-500",
			"bg-rose-600",
		},
		{
			"bg-teal-500",
			"bg-teal-600",
		},
	}
)

templ Form(gameID uuid.UUID, questionType model.QuestionType, questionBlock templ.Component, answerBlock templ.Component) {
	<form
		hx-post="/admin/question"
		hx-target="#question-list-container"
		hx-swap="innerHTML"
		hx-trigger="submit"
		hx-encoding="multipart/form-data"
		hx-on::after-request="handleQuestionCreated(event)"
		hx-indicator="#question-spinner"
		id="new-question-form"
	>
		<input type="hidden" name="question_type" value={ string(questionType) }/>
		<input type="hidden" name="game_id" value={ gameID.String() }/>
		<div class={ "card text-primary-content rounded-2xl bg-accent" }>
			<div class="card-body p-4">
				<div class="grid grid-cols-4 gap-4">
					@questionBlock
				</div>
				<div class="grid grid-cols-4 gap-4 mt-4">
					@answerBlock
				</div>
			</div>
		</div>
		<div class="mt-4 text-right">
			<button type="submit" class="btn btn-warning min-w-60 rounded-2xl relative">
				<span>Добавить</span>
				@frontend_components.OverlayLoader("question-spinner")
			</button>
		</div>
	</form>
	<script type="text/javascript">
	    function handleQuestionCreated(event) {
			if (!event.detail.successful) {
				return
			}
        
		    if (addQuestionModal) {
				addQuestionModal.close();
			}
        
        	// Get form by ID and reset it
        	const form = document.getElementById('new-question-form');
        	if (form) {
				form.reset();
			}
        
        	// Reset image preview if exists
        	const imagePreview = document.getElementById('image-preview');
        	const imagePlaceholder = document.getElementById('image-placeholder');
        	if (imagePreview && imagePlaceholder) {
            	imagePreview.classList.add('hidden');
            	imagePlaceholder.classList.remove('hidden');
        	}
		}		
	</script>
}

templ QuestionImageInput() {
	<div class="self-start rounded-lg w-full sm:w-auto h-full">
		<label class="form-control w-full h-full sm:max-w-xs cursor-pointer">
			<div class="relative w-full h-36 sm:h-44 bg-white rounded-lg overflow-hidden">
				<div id="image-placeholder" class="absolute inset-0 flex items-center justify-center text-gray-500 p-4 text-center text-sm sm:text-base">
					Выбрать изображение
				</div>
				<img
					id="image-preview"
					class="hidden w-full h-full object-contain"
					alt="Preview"
				/>
				<input
					type="file"
					name="question_image"
					class="hidden"
					accept="image/png, image/jpeg"
					onchange="previewImage(this)"
				/>
			</div>
		</label>
	</div>
}

templ QuestionTextInput() {
	<div class="col-span-3">
		<textarea
			name="question_text"
			class="w-full textarea textarea-lg min-h-40 text-white focus:text-black bg-blue-600 focus:bg-white placeholder:text-gray-300 h-full"
			placeholder="Текст вопроса"
			required
		></textarea>
	</div>
}

templ AnswerChoiceInput(i int, id uuid.UUID, show bool, isMultiple ...bool) {
	<div id={ fmt.Sprintf("answer-choice-input-%s", id.String()) } class={ fmt.Sprintf("card rounded-xl justify-self-stretch %s %s", structs.Or(i < len(answerOptionColors), answerOptionColors[i][0], "bg-stone-500"), structs.Or(show, "", "hidden")) }>
		<div class="card-body p-2">
			<div class="grid grid-cols-2 gap-4 items-start">
				<div class="justify-self-start">
					<button
						class="btn btn-sm btn-ghost rounded-2xl text-white"
						data-id={ id.String() }
						onclick="showChoiceAddButton(this)"
						type="button"
					>
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-4">
							<path stroke-linecap="round" stroke-linejoin="round" d="m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 0 0-7.5 0"></path>
						</svg>
					</button>
				</div>
				<div class="form-control justify-self-end">
					<div class="tooltip" data-tip="Пометить как правильный ответ">
						<label class="cursor-pointer label p-0">
							<input
								type="hidden"
								value="0"
								name="question_correct_answer"
							/>
							<input
								id={ fmt.Sprintf("answer-choice-input-checkbox-%s", id.String()) }
								value="1"
								name="question_correct_answer"
								if len(isMultiple) > 0 && isMultiple[0] {
									type="checkbox"
									class="checkbox checkbox-accent checkbox-lg border-4"
								} else {
									type="radio"
									class="radio radio-accent radio-lg border-4"
									required
								}
							/>
						</label>
					</div>
				</div>
			</div>
			<textarea
				id={ fmt.Sprintf("answer-choice-input-textarea-%s", id.String()) }
				name="question_answer_option_text"
				class={ fmt.Sprintf("textarea min-h-32 text-white focus:text-black focus:bg-white %s placeholder:text-gray-300", structs.Or(i < len(answerOptionColors), answerOptionColors[i][1], "bg-stone-600")) }
				placeholder="Вариант ответа"
			></textarea>
		</div>
	</div>
	<div
		id={ fmt.Sprintf("answer-choice-add-button-%s", id.String()) }
		class={ fmt.Sprintf("self-center justify-self-center %s", structs.Or(!show, "", "hidden")) }
	>
		<button
			class={ fmt.Sprintf("btn rounded-2xl border-0 text-lg text-white hover:%s %s", structs.Or(i < len(answerOptionColors), answerOptionColors[i][1], "bg-stone-600"), structs.Or(i < len(answerOptionColors), answerOptionColors[i][0], "bg-stone-500")) }
			data-id={ id.String() }
			onclick="showChoiceInput(this)"
			type="button"
		>+</button>
	</div>
}

templ AnswerTextInput() {
	<div class="col-span-4 card justify-self-stretch bg-orange-500 rounded-xl">
		<div class="card-body p-4">
			<input type="hidden" value="1" name="question_correct_answer"/>
			<label class="input input-md w-full text-white focus:text-black bg-orange-600 focus:bg-white flex items-center gap-2">
				<input
					name="question_answer_option_text"
					type="text"
					placeholder="Правильный ответ"
					class="grow placeholder:text-gray-300"
					required
				/>
				<div class="tooltip tooltip-left" data-tip='Правильность ответа проверяется по точному совпадению с ответом, который вы укажете. Не учитывается регистр букв. Если нужно задать вопрос с пропуском слова, используйте символ "_" для указания места пропуска (по желанию).'>
					<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6 text-gray-300">
						<path stroke-linecap="round" stroke-linejoin="round" d="M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 5.25h.008v.008H12v-.008Z"></path>
					</svg>
				</div>
			</label>
		</div>
	</div>
}

templ QuestionMultipleChoiceOption() {
	<div class="col-span-4 mt-4 text-white">
		<label>
			Считать ответ верным если:
			<select name="question_multiple_choice_type" class="select w-full max-w-max text-white bg-blue-600" required>
				<option value="all" selected>Выбраны ВСЕ правильные варианты ответа</option>
				<option value="one_of">Выбран ЛЮБОЙ из правильных вариантов ответа</option>
			</select>
			<div class="tooltip tooltip-left ml-2 align-middle" data-tip='"Выбраны ВСЕ правильные варианты ответа" - ответ будет засчитан, если выбраны все правильные варианты. \n\n "Выбран ЛЮБОЙ из правильных вариантов ответа" - ответ считается верным, если выбран хотя бы один правильный вариант.'>
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
					<path stroke-linecap="round" stroke-linejoin="round" d="M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 5.25h.008v.008H12v-.008Z"></path>
				</svg>
			</div>
		</label>
	</div>
}
