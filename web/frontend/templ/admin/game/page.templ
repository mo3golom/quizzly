package frontend_admin_game

import "quizzly/web/frontend/templ/components"
import "quizzly/web/frontend/handlers"
import "fmt"
import "github.com/google/uuid"

templ Page(components ...templ.Component) {
	<div id="game-page">
		@frontend_components.Composition(components...)
	</div>
}

templ AdminPageQuestionsList(list templ.Component) {
	<div id="game-page-questions-list">
		@list
	</div>
}

templ Header(game *handlers.Game, title templ.Component, settings templ.Component) {
	<div class="mb-4">
		<input id="game-id" name="game-id" type="hidden" value={ game.ID.String() }/>
		<div class="flex items-start gap-4">
			<div class="grow">
				<h1 class="font-bold text-2xl text-base-content">
					@title
				</h1>
				<h2>
					switch game.Status {
						case "created":
							<span class="badge badge-info">{ "Создана" }</span>
						case "started":
							<span class="badge badge-success">{ "В процессе" }</span>
						case "finished":
							<span class="badge badge-warning">{ "Завершена" }</span>
					}
					<span class="ml-2 text-base-content opacity-25">Создана { game.CreatedAt.Format("02.01.2006") }</span>
				</h2>
			</div>
			<div class="flex gap-2 shrink-0">
				if game.Status == "created" {
					<button
						class="btn btn-success btn-sm rounded-2xl"
						hx-post="/admin/game/start"
						hx-trigger="click"
						hx-target="#game-page"
						hx-swap="outerHTML"
						hx-include="[name='game-id']"
					>
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
							<path stroke-linecap="round" stroke-linejoin="round" d="M5.25 5.653c0-.856.917-1.398 1.667-.986l11.54 6.347a1.125 1.125 0 0 1 0 1.972l-11.54 6.347a1.125 1.125 0 0 1-1.667-.986V5.653Z"></path>
						</svg>
						<span>Начать</span>
					</button>
				}
				if game.Status != "finished" {
					<button
						class="btn btn-error btn-sm rounded-2xl"
						hx-post="/admin/game/finish"
						hx-trigger="click"
						hx-target="#game-page"
						hx-swap="outerHTML"
						hx-include="[name='game-id']"
					>
						<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
							<path stroke-linecap="round" stroke-linejoin="round" d="M5.25 7.5A2.25 2.25 0 0 1 7.5 5.25h9a2.25 2.25 0 0 1 2.25 2.25v9a2.25 2.25 0 0 1-2.25 2.25h-9a2.25 2.25 0 0 1-2.25-2.25v-9Z"></path>
						</svg>
						<span>Завершить</span>
					</button>
				}
			</div>
		</div>
		<div class="mt-4">
			@settings
		</div>
	</div>
}

templ Title(title *string) {
	if title != nil {
		{ *title }
	} else {
		Игра без названия
	}
}

templ TitleInput(gameID uuid.UUID, title *string) {
	<input
		name="title"
		class="input-bordered border-2 focus:bg-white focus:text-base-content w-full rounded-md p-1 pl-2"
		if title != nil {
			value={ *title }
		}
		placeholder="Название игры"
		id="game-page-title-input"
		hx-post={ fmt.Sprintf("/admin/game/%s/update", gameID.String()) }
		hx-target="this"
		hx-swap="none"
		hx-trigger="change changed"
		required
	/>
	<script type="text/javascript">
		document.getElementById("game-page-title-input").addEventListener("keydown", function(event) {
			if (event.keyCode === 13) { // Check if Enter key is pressed
				this.blur(); // Unfocus the input
			}
		});
   	</script>
}

templ Invite(inviteUrl string) {
	<div class="p-6 bg-accent w-full rounded-2xl mb-4">
		<div class="text-white stat-title mb-2">Ссылка на игру</div>
		<div class="join w-full">
			<input id="game-page-game-link" type="text" value={ inviteUrl } class="input join-item w-full select-all" disabled/>
			<button
				class="btn btn-warning join-item"
				data-copy-target="game-page-game-link"
				onclick="copy(this)"
			>скопировать</button>
		</div>
	</div>
}

templ SettingBadge(text string, hint string, toggle ...templ.Component) {
	<div class="badge badge-lg mr-2 mb-2 p-4 pr-1">
		<span class="pr-3 flex items-center">
			<span class="mr-1">{ text }</span>
			<div class="tooltip tooltip-bottom" data-tip={ hint }>
				<svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-5">
					<path stroke-linecap="round" stroke-linejoin="round" d="M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 5.25h.008v.008H12v-.008Z"></path>
				</svg>
			</div>
		</span>
		if len(toggle) >0 {
			@toggle[0]
		}
	</div>
}

templ SettingToggle(gameID uuid.UUID, name string, value bool) {
	<input
		type="checkbox"
		name={ name }
		class="toggle toggle-primary border-2"
		hx-post={ fmt.Sprintf("/admin/game/%s/update", gameID.String()) }
		hx-target="this"
		hx-swap="none"
		hx-trigger="change"
		hx-vals={ fmt.Sprintf(`{"%s": %t}`, name, !value) }
		hx-on::after-request='this.setAttribute(`hx-vals`, `{"${this.name}": ${!this.checked}}`)'
		if value {
			checked
		}
	/>
}
