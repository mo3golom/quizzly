// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.663
package frontend_public_game

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func GlobalScripts() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<script type=\"text/javascript\">\n        let chosenAnswers = [];\n        let maxPossibleChosenAnswers = 1;\n\n        function submitAnswer() {\n            let overlay = document.getElementById(\"game-page-overlay\");\n            overlay.classList.remove(\"hidden\");\n            setTimeout(() => {\n                      overlay.classList.add(\"opacity-100\");\n                      overlay.classList.remove(\"opacity-0\");\n            }, 10);\n        }\n\n        function showAnswerResult() {\n            let result  = document.getElementById(\"game-page-answer-result\");\n            let overlay = document.getElementById(\"game-page-overlay\");\n            setTimeout(() => {\n                result.classList.add(\"opacity-100\");\n                result.classList.remove(\"opacity-0\");\n            }, 100);\n\n            setTimeout(() => {\n                result.classList.add(\"opacity-0\");\n                result.classList.remove(\"opacity-100\");\n\n                overlay.classList.add(\"opacity-0\");\n                overlay.classList.remove(\"opacity-100\");\n            }, 1500);\n            setTimeout(() => {\n                result.classList.add(\"hidden\");\n                overlay.classList.add(\"hidden\");\n            }, 2000);\n        }\n\n        function chooseAnswer(element) {\n              let id = element.id\n              let found = chosenAnswers.findIndex((i) => i == id)\n              if (found != -1) {\n                     element.classList.remove(\"outline\", \"outline-4\", \"outline-green-500\");\n                     document.getElementById(\"checkbox-\"+id).checked=false\n                     chosenAnswers.splice(found, 1);\n\n                     if (chosenAnswers.length == 0) {\n                         document.getElementById(\"play-page-submit\").disabled=true\n                     }\n                     return\n              }\n\n              if (maxPossibleChosenAnswers == 1 && chosenAnswers.length > 0) {\n                 chosenAnswers.forEach((i) => {\n                     document.getElementById(i).classList.remove(\"outline\", \"outline-4\", \"outline-green-500\");\n                     document.getElementById(\"checkbox-\"+i).checked=false\n                 });\n                 chosenAnswers = [];\n                 document.getElementById(\"play-page-submit\").disabled=true\n              }\n\n              element.classList.add(\"outline\", \"outline-4\", \"outline-green-500\");\n              document.getElementById(\"checkbox-\"+id).checked=true\n              document.getElementById(\"play-page-submit\").disabled=false\n              chosenAnswers.push(id);\n        }\n    </script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
